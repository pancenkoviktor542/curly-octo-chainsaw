final class OperationUsage: ObservableObject {
    private let operationQueue = OperationQueue()
    private let queue = DispatchQueue(label: "OperationUsage.queue", qos: .background, attributes: .concurrent)
    
    init() {
        operationQueue.maxConcurrentOperationCount = 2
        operationQueue.underlyingQueue = queue
       // operationQueue.isSuspended = false
    }
    
    func addBlockOperation() {
        operationQueue.addOperation {
            print("Simple Block1")
            sleep(2)
        }
        operationQueue.addOperation {
            print("Simple Block2")
            sleep(2)
        }
        operationQueue.addOperation {
            print("Simple Block3")
            sleep(2)
        }
        operationQueue.waitUntilAllOperationsAreFinished()
        print("allFinished")
            
    }
